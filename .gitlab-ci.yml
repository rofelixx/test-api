variables:
  PROJECT_NAME: 'Segfy.Schedule'
  BUILD_IMAGE: 'registry.gitlab.com/segfy/docker_images/build_dotnet/dotnet5:4.0.3'

stages:
  - build
  - test
  - docker

build:
  stage: build
  image: $BUILD_IMAGE
  only:
    - master
  script:
    - cd src/$PROJECT_NAME
    - dotnet restore
    - dotnet build --configuration Release
    - dotnet publish --configuration Release --output ../../publish/
  artifacts:
    paths:
      - ./publish/*
  tags:
    - segfy

test:
  stage: test
  image: $BUILD_IMAGE
  coverage: /Total[^|]*\|[^|]*\s+([\d\.]+)/
  script:
    - cd tests/$PROJECT_NAME.Tests
    - dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura
  artifacts:
    reports:
      cobertura: ./tests/$PROJECT_NAME.Tests/coverage.cobertura.xml
  tags:
    - segfy

docker-build:
  image: docker:latest
  stage: docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build -f "./src/$PROJECT_NAME/Dockerfile" --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: $CI_COMMIT_BRANCH
  tags:
    - segfy